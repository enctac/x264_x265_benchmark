
@echo off
cd /d %~dp0
setlocal ENABLEDELAYEDEXPANSION

REM =================================================================
REM　引数
REM　　%1： エンコード対象とする動画ファイル名
REM =================================================================

REM =================================================================
REM　ベンチマークの名称
REM =================================================================

set benchmarkname=x264_x265_benchmark_20170730


REM =================================================================
REM　結果を格納するファイル名(.txt以外の拡張子にはしないで下さい)
REM =================================================================
set resultlog=".\ベンチマークの結果.txt"


REM =================================================================
REM　一時ファイルやエンコードファイルを置くディレクトリ
REM =================================================================
set tempdir=.\temp
mkdir %tempdir% 2> nul

set encdir=.\encode
mkdir %encdir% 2> nul

@echo.
set strcolor=D0
call :colorEcho "【Benchmark】!benchmarkname!"

REM =================================================================
REM　いくつかのパラメータ設定
REM =================================================================

REM 終了コード
set exitCode=0

REM colorEchoによるエラー出力時の文字色指定。colorコマンド参照。Eは明るい黄色。
set strcolor=E

REM =================================================================
REM　バイナリの設定
REM =================================================================
set bindir=.\bin
set ffmpeg=%bindir%\ffmpeg.exe

set cpuz=%bindir%\cpuz_x32.exe
IF "%PROCESSOR_ARCHITECTURE%" == "AMD64" (
 IF EXIST %bindir%\cpuz_x64.exe (
  set cpuz=%bindir%\cpuz_x64.exe
 )
)

REM =================================================================
REM　CPU-Zのログファイル名
REM =================================================================
set cpuzlogname=cpu-z-log
set cpuzlog=%bindir%\%cpuzlogname%.txt

REM =================================================================================
REM　バイナリの存在チェック
REM =================================================================================

IF NOT EXIST %ffmpeg% (
 @echo.
 call :colorEcho "以下のffmpegが見つかりません。終了します。"
 @echo 　　%ffmpeg%
 @echo.
 set exitCode=1
 goto eof
)

IF NOT EXIST %cpuz% (
 @echo.
 call :colorEcho "以下のCPU-Zが見つかりません。終了します。"
 @echo 　　%cpuz%
 @echo.
 set exitCode=1
 goto eof
)

REM =================================================================================
REM　処理開始。
REM
REM　　CPU-Zでエンコード中の動作周波数が取れるようにしたい。
REM　　x265のSlowは結構時間がかかり、その間はフル稼働状態になるので、
REM　　その最中にCPU-Zを起動してログを取得する。
REM =================================================================================

(@echo 【Benchmark】!benchmarkname!) > %resultlog%

set waittime=10
set cpuzlag=8

@echo.
@echo 別の最小化ウィンドウでx265ベンチマークの実行を開始し、
@echo その %cpuzlag% 秒後にこのウィンドウからCPU-Zを起動します。
@echo ユーザーアカウント制御で起動許可が求められますので許可して下さい。

timeout /T %waittime%


REM =================================================================
REM　別ウィンドウでx265のベンチマークを開始する
REM =================================================================

REM -----------------------------------------------------------------------
REM x265ベンチマークバッチが終わった時に作成されるファイル。
REM このファイルの存在チェックをすることで終了待ちをする。
REM -----------------------------------------------------------------------
set x265BenchFinished=%tempdir%\x265BenchFinished.txt
del %x265BenchFinished% > nul 2>&1

REM -----------------------------------------------------------------------
REM　引数
REM　　%1： エンコード対象とする動画ファイル名。
REM　　%2： 実行モード。AUTOで自動モード(最後のpauseをしないだけ)
REM　　%3： 結果を格納するファイル名。テキストファイル(*.txt)のみ指定可。
REM -----------------------------------------------------------------------

@echo.
@echo x265ベンチマークを別の最小化ウィンドウで開始します...

start /MIN cmd /C _A__x265ベンチマークだけ行いたい場合はこれをダブルクリック.bat "%~1" MANUAL %resultlog%

REM =================================================================
REM　少し待ってからCPU-Zを起動してログを取得する。
REM =================================================================

@echo.
@echo エンコード中の動作周波数を取得するため、
@echo 少し待ってからCPU-Zを起動してログを取得します。
@echo ユーザーアカウント制御で起動許可が求められるので許可して下さい。

timeout /NOBREAK /T %cpuzlag%

@echo.
@echo CPU-Zを起動してシステム情報のログを取得します...
call :colorEcho "　（ユーザーアカウント制御のダイアログで起動を許可して下さい）"

%cpuz% -txt=%cpuzlogname%

@echo.
@echo CPU-Zによるログ取得が終了しました。

REM =================================================================
REM　x265ベンチマークが終了するのを待つ。
REM =================================================================

set pollsec=3

@echo.
@echo x265ベンチマークが終わるまで待機します。
@echo x265ベンチマークの進行状況は、最小化されているウィンドウを開くと確認できます。
@echo 終わったことを検出したら続いてこのウィンドウでx264ベンチマークを実行します。
@echo しばらくお待ち下さい...

:waitX265Benchmark

timeout /NOBREAK /T %pollsec% > nul
IF NOT EXIST %x265BenchFinished% goto waitX265Benchmark

@echo.
set strcolor=D
call :colorEcho "x265ベンチマークが終わったことを検知しました。"
call :colorEcho "(x265ベンチマークの別ウィンドウは閉じてしまってOKです)"
set strcolor=E
@echo.
@echo 続いてこのウィンドウでx264ベンチマークを実行します。

REM =================================================================
REM　x264のベンチマークを呼び出す
REM =================================================================

REM -----------------------------------------------------------------------
REM　引数
REM　　%1： エンコード対象とする動画ファイル名。
REM　　%2： 実行モード。AUTOで自動モード(最後のpauseをしないだけ)
REM　　%3： 結果を格納するファイル名。テキストファイル(*.txt)のみ指定可。
REM -----------------------------------------------------------------------

call _B__x264ベンチマークだけ行いたい場合はこれをダブルクリック.bat "%~1" AUTO %resultlog%

IF NOT %ERRORLEVEL%==0 (
 call :colorEcho "x264ベンチマークがうまくいかなかったようです。終了します。"
 @echo.
 set exitCode=%ERRORLEVEL%
 goto eof
)


REM =================================================================
REM　システム情報収集バッチを呼び出す
REM =================================================================

REM ------------------------------------------------------------------------------------------
REM　引数（一括呼び出し時に指定されるもの）
REM　　%1： 実行モード。AUTOで自動モード(メイン処理終了時のメッセージ出力とpauseをしないだけ)
REM　　%2： 結果を格納するファイル名。テキストファイル(*.txt)のみ指定可。
REM　　%3： 出力モード。FULL,NORMAL,SIMPLE,CPUZ_BENCH,X264BENCHのいずれか。
REM　　%4： ログ取得モード。RECYCLEの場合はCPU-Zによる新規ログ取得は行わず既得ログを利用する。
REM ------------------------------------------------------------------------------------------

REM ログ取得モードをRECYCLEにして呼び出し、上でCPU-Zで取得したログを解析させる。

call _Env1__システム情報のフル取得だけ行いたい場合はこれをダブルクリック.bat AUTO %resultlog% X264BENCH RECYCLE

IF NOT %ERRORLEVEL%==0 (
 call :colorEcho "システム情報の取得がうまくいかなかったようです。終了します。"
 @echo.
 set exitCode=%ERRORLEVEL%
 goto eof
)

REM =================================================================
REM　ffmpegのバージョンを調べて記録
REM =================================================================
set ffmpegVer=不明
set vertemp=%tempdir%\vertemp.txt

%ffmpeg% -version > %vertemp%
set /p fVer=<%vertemp%
FOR /F "tokens=3" %%a in ('@echo !fVer!') DO (
 set ffmpegVer=%%a
)
(@echo 【ffmpeg】!ffmpegVer!) >> %resultlog%
(@echo 【追記】) >> %resultlog%


:eof

@echo.
@echo ベンチマークが終了しました。
@echo 結果は %resultlog% を参照して下さい。
@echo また「%encdir%」にはエンコードした動画やログ、
@echo 「%tempdir%」には一時出力ファイル等があります。
@echo 特に必要ないなら、これらは削除して下さい。
@echo.
@echo ※注意
@echo 　CPU-Zのログ形式の都合上、複数のGPUがある場合、
@echo 　GPUのドライバ情報の対応付けが不確実になることがあります。
@echo 　GPUのドライバ情報の右側に疑問符(?)がついている場合は、
@echo 　対応付けを自分で確認し、間違っていたら修正して下さい。
@echo.
@echo ※注意
@echo 　オーバークロック(OC)の設定状態などは調べることができません。
@echo 　それらの点については【追記】の項に説明を書いて情報を提示すると良いでしょう。
@echo.

pause

exit /b %exitCode%

REM =======================================================
REM　↑メイン処理の終わり
REM =======================================================


REM ↓　ここから下はサブルーチン　↓


REM ========================================
REM colorEcho
REM　引数%1：出力する文字列("で囲む)
REM
REM　strcolorで指定された色で文字を出力する。
REM　tempdirに文字列をファイル名としたファイルを作るので
REM　ファイル名に使えない文字は指定できない。
REM
REM　参考にさせていただいたサイト
REM　　http://scripting.cocolog-nifty.com/blog/2009/08/echo-447c.html
REM ========================================

:colorEcho

IF NOT EXIST %tempdir% (
 mkdir %tempdir%
)

REM strcolorによる色指定がないなら白で。
IF NOT DEFINED strcolor set strcolor=7

pushd %tempdir%

<nul >"%~1" cmd /k prompt $h
findstr /a:%strcolor% "." "%~1" nul
@echo.

popd

exit /b

REM ========================================
REM　↑:colorEchoの終わり
REM ========================================
